 name: Cercat-Application Deploy with Docker

 on:
   push:
     paths-ignore:
       - '../../applications/app-alarm/**'
       - '.github/workflows/**'
       - 'README.md'
     branches: [ main ]

 env:
   DOCKER_IMAGE: ghcr.io/jiwonkkang/cercat
   VERSION: ${{ github.sha }}
   CONTAINER_NAME: cercat


 jobs:
   build:
     name: Build
     runs-on: ubuntu-latest
     steps:
       - name: Checkout
         uses: actions/checkout@v4 # git 레파지토리를 클론하는것과 같음
         with:
           submodules: true
           token: ${{ secrets.SUBMODULE_TOKEN }}

       - name: Setup docker buildx
         id: buildx
         uses: docker/setup-buildx-action@v1

       - name: Cache docker layers
         uses: actions/cache@v4
         with:
           path: /tmp/.buildx-cache
           key: ${{ runner.os }}-buildx-${{ env.VERSION }}
           restore-keys: |
             ${{ runner.os }}-buildx-

       - name: Login to ghcr
         uses: docker/login-action@v3
         with:
           registry: ghcr.io
           username: ${{ github.actor }}
           password: ${{ secrets.GHCR_TOKEN }}

       - name: Build and push
         id: docker_build
         uses: docker/build-push-action@v6
         with:
           file: ./applications/app-api/Dockerfile
           builder: ${{ steps.buildx.outputs.name }}
           push: true
           tags: ${{ env.DOCKER_IMAGE }}:latest

   deploy:
     needs: build
     name: Deploy
     runs-on: ubuntu-latest
     steps:
       - name: Docker login
         uses: appleboy/ssh-action@master
         with:
           host: ${{ secrets.REMOTE_IP }}
           username: ${{ secrets.REMOTE_SSH_ID }}
           key: ${{ secrets.REMOTE_SSH_KEY }}
           port: ${{ secrets.REMOTE_SSH_PORT }}
           script: |
             sudo chmod 666 /var/run/docker.sock
             echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

       - name: Run
         uses: appleboy/ssh-action@master
         with:
           host: ${{ secrets.REMOTE_IP }}
           username: ${{ secrets.REMOTE_SSH_ID }}
           key: ${{ secrets.REMOTE_SSH_KEY }}
           port: ${{ secrets.REMOTE_SSH_PORT }}
           script: |
             ./deploy.sh
